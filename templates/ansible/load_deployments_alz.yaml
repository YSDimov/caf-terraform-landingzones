- debug:
    msg:
    - "{{deployment_mode}}"
    - "{{stage}}"
    - "{{region}}"
    - "{{service}}"
    
- name: "{{destination_alz_path}} - Set tfstate_object"
  set_fact:
    tfstate_object: "{{resources['alz_' + service].tfstate}}"

- name: "{{destination_path}}/{{stage}} - Set landingzone file_path"
  set_fact:
    destination_alz_path: "{{destination_path}}/{{stage}}/{{service}}"
    alz_template_folder: "{{public_templates_folder}}/{{ tfstate_object.template_lib_folder}}"

- name: "{{destination_alz_path}} - Set landingzone file_path"
  set_fact:
    template_lib_folder: "{{alz_template_folder}}/lib/{{ tfstate_object.alz_version }}"

- name: "{{destination_alz_path}} - Set landingzone file_path"
  set_fact:
    mg: "{{ lookup('template', '{{ template_lib_folder }}/archetype_config_overrides.caf.platform.yaml') | from_yaml }}"
    mg_custom: "{{ lookup('template', '{{ template_lib_folder }}/custom_landing_zones.caf.platform.yaml') | from_yaml  }}"

- debug:
    msg:
    - "tfstate_object: {{resources['alz_' + service].tfstate}}"
    - "destination_alz_path: {{destination_path}}/{{stage}}/{{service}}"
    - "template_lib_folder: {{alz_template_folder}}/lib/{{ tfstate_object.alz_version }}"
    - "alz_template_folder: {{public_templates_folder}}/{{ tfstate_object.template_lib_folder}}"
    - "tfstate_object: {{resources['alz_' + service].tfstate}}"
    - "mkdir -p {{ destination_alz_path }}/lib/{{ item.path }}"

- name: "Clean-up destination directory"
  shell: |
    rm -rf "{{ destination_alz_path }}"
  when:
    - topology.management_groups[region][service].clean_up_destination_folder | default(True)

